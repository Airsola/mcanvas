{"version":3,"file":"mcanvas.min.js","sources":["../lib/utils.js","../lib/mcanvas.js","../lib/mcrop.js","../lib/index.js"],"sourcesContent":["export default {\n    extend(obj1, obj2) {\n        let type = this.isType(obj2)\n        if(type === 'object'){\n            this.forin(obj2, (k, v) => {\n                let vType = this.isType(v)\n                if (vType !== 'object' && vType !== 'array') {\n                    obj1[k] = v\n                } else {\n                    if (this.isType(obj1[k]) !== vType || obj1[k] === null) {\n                        obj1[k] = vType === 'object' ? {} : []\n                    }\n                    this.extend(obj1[k], v)\n                }\n            })\n        }else if(type === 'array'){\n            for (let i = 0; i < obj2.length; i++) {\n                obj1[i] = obj2[i]\n            }\n        }else{\n            obj1 = obj2\n        }\n        return obj1\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image()\n        if(image.indexOf('http') === 0){\n            img.crossOrigin = '*'\n        }\n        img.onload = () => {\n            loaded(img)\n            setTimeout(() => img = null, 1000)\n        }\n        img.onerror = () => {\n            error('img load error')\n        }\n        img.src = image\n    },\n    isObject(tar){\n        return this.isObjFunc(tar, 'Object')\n    },\n    isBoolean(tar){\n        return this.isObjFunc(tar, 'Boolean')\n    },\n    isArr(tar){\n        return this.isObjFunc(tar, 'Array')\n    },\n    getImage(image, cbk, error){\n        if(typeof image === 'string'){\n            this.loadImage(image, img => {\n                cbk(img)\n            }, error)\n        }else if(typeof image === 'object'){\n            cbk(image)\n        }else{\n            console.log('add image error')\n            return\n        }\n    },\n    forin(obj, cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k, obj[k])\n            }\n        }\n    },\n    isIos8(){\n        let UA = window.navigator.userAgent.toLowerCase()\n        let IOS = /(iPhone|iPad|iPod|iOS)/gi.test(UA)\n        let IPAD = /(iPad)/gi.test(UA)\n        if(IOS){\n            return IPAD ? UA.match(/cpu os (\\d*)/)[1] < 9 : UA.match(/iphone os (\\d*)/)[1] < 9\n        }else{\n            return false\n        }\n    },\n    deepCopy(obj){\n        return JSON.parse(JSON.stringify(obj))\n    },\n    isObjFunc(tar, name) {\n        return Object.prototype.toString.call(tar) === '[object ' + name + ']'\n    },\n    isType(tar){\n        return Object.prototype.toString.call(tar).split(' ')[1].replace(']', '').toLowerCase()\n    },\n    getSize(img){\n        let iw, ih\n        if(img.tagName === 'IMG'){\n            iw = img.naturalWidth\n            ih = img.naturalHeight\n        }else if(img.tagName === 'CANVAS'){\n            iw = img.width\n            ih = img.height\n        }else{\n            iw = img.offsetWidth\n            ih = img.offsetHeight\n        }\n        return { iw, ih }\n    },\n}\n","import _ from './utils'\n\nexport default function MCanvas(options = {}){\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))return new MCanvas(options)\n\n    // 配置canvas初始大小；\n    // width：画布宽度，Number,选填，默认为 500;\n    // height: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = _.extend({\n        width: 500,\n        height: 500,\n        backgroundColor : '',\n    }, options)\n\n    // 全局画布；\n    this.canvas = null\n    this.ctx = null\n    // 绘制函数队列；\n    this.queue = []\n    // 回调函数池；\n    this.fn = {\n        // 最后执行的函数；\n        success(){},\n        // 错误回调；\n        error(){},\n    }\n    this.data = {\n        // 文字id；\n        textId: 0,\n        // 文字绘制数据；\n        text : {},\n        // 背景图数据;\n        bgConfig : null,\n    }\n\n    // 初始化创建画布；\n    this._init()\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas')\n    this.canvas.width = this.ops.width\n    this.canvas.height = this.ops.height\n    this.ctx = this.canvas.getContext('2d')\n    this.ctx.save()\n\n    this.ops.backgroundColor && this.setBgColor(this.ops.backgroundColor)\n}\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(image, bg = {\n    type : 'origin',\n}){\n    if(!image && !this.data.bgConfig){\n        console.error('mcanvas error : the init background must has a image.')\n        return\n    }\n\n    // 缓存bg options， 用于重置；\n    if(!image){\n        bg = this.data.bgConfig\n    }else{\n        bg.image = image\n        this.data.bgConfig = bg\n    }\n\n    this.queue.push(() => {\n        if(bg.color)this.setBgColor(bg.color)\n        _.getImage(bg.image, img =>{\n            this._background(img, bg)\n        }, this.fn.error)\n    })\n    return this\n}\n\n// 设置画布颜色;\nMCanvas.prototype.setBgColor = function(color){\n    this.ctx.fillStyle = color\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height)\n}\n\nMCanvas.prototype._getBgAlign = function(left, iw, cw, cropScale){\n    let rv\n    if(typeof left === 'string'){\n        if(left === '50%' || left === 'center'){\n            rv = Math.abs((iw - cw / cropScale) / 2)\n        }else if(left === '100%'){\n            rv = Math.abs(iw - cw / cropScale)\n        }else if(left === '0%'){\n            rv = 0\n        }\n    }else if(typeof left === 'number'){\n        rv = left\n    }else{\n        rv = 0\n    }\n    return rv\n}\nMCanvas.prototype._background = function(img, bg){\n    let { iw, ih } = _.getSize(img)\n    // 图片与canvas的长宽比；\n    let iRatio = iw / ih\n    let cRatio = this.canvas.width / this.canvas.height\n    // 背景绘制参数；\n    let sx, sy, swidth, sheight, dx, dy, dwidth, dheight\n    let cropScale\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            if(iRatio > cRatio){\n                swidth = ih * cRatio\n                sheight = ih\n                cropScale = this.canvas.height / ih\n            }else{\n                swidth = iw\n                sheight = swidth / cRatio\n                cropScale = this.canvas.width / iw\n            }\n\n            sx = this._getBgAlign(bg.left, iw, this.canvas.width, cropScale)\n            sy = this._getBgAlign(bg.top, ih, this.canvas.height, cropScale)\n\n            dy = dx = 0\n            dheight = this.canvas.height\n            dwidth = this.canvas.width\n            break\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0\n            swidth = iw\n            sheight = ih\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width\n                dheight = dwidth / iRatio\n                dx = bg.left || 0\n                dy = (bg.top || bg.top === 0) ? bg.top : (this.canvas.height - dheight) / 2\n            }else{\n                dheight = this.canvas.height\n                dwidth = dheight * iRatio\n                dy = bg.top || 0\n                dx = (bg.left || bg.left === 0) ? bg.left : (this.canvas.width - dwidth) / 2\n            }\n            break\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = iw\n            this.canvas.height = ih\n            sx = sy = 0\n            swidth = iw\n            sheight = ih\n            dx = dy = 0\n            dwidth = this.canvas.width\n            dheight = this.canvas.height\n            break\n        default:\n            console.error('mcanvas error:background type error!')\n            return\n    }\n    this.ctx.drawImage(img, sx, sy, swidth, sheight, dx, dy, dwidth, dheight)\n    this._next()\n}\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制矩形层；\nMCanvas.prototype.rect = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0 } = ops\n        let cw = this.canvas.width, ch = this.canvas.height\n        let width = this._get(cw, 0, ops.width || 0, 'pos') - 2 * strokeWidth,\n            height = this._get(ch, 0, ops.height || 0, 'pos') - 2 * strokeWidth\n        let x = this._get(cw, width, ops.x || 0, 'pos') + strokeWidth / 2,\n            y = this._get(ch, height, ops.y || 0, 'pos') + strokeWidth / 2\n        this.ctx.lineWidth = strokeWidth\n        this.ctx.fillStyle = fillColor\n        this.ctx.strokeStyle = strokeColor\n\n        this.ctx.beginPath()\n        this.ctx.strokeRect(x, y, width, height)\n        this.ctx.fillRect(x, y, width, height)\n        this.ctx.closePath()\n\n        this._resetCtx()._next()\n    })\n    return this\n}\n\n// 绘制圆形层；\nMCanvas.prototype.circle = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0 } = ops\n        let cw = this.canvas.width, ch = this.canvas.height\n        let r = this._get(cw, 0, ops.r || 0, 'pos') - 2 * strokeWidth\n        let x = this._get(cw, 2 * r, ops.x || 0, 'pos') + strokeWidth / 2 + r,\n            y = this._get(ch, 2 * r, ops.y || 0, 'pos') + strokeWidth / 2 + r\n\n        this.ctx.beginPath()\n        this.ctx.arc(x, y, r, 0, Math.PI * 2, false)\n        this.ctx.fillStyle = fillColor\n        this.ctx.fill()\n        this.ctx.strokeStyle = strokeColor\n        this.ctx.lineWidth = strokeWidth\n        this.ctx.stroke()\n        this.ctx.closePath()\n\n        this._resetCtx()._next()\n    })\n    return this\n}\n\n// 重置ctx属性;\nMCanvas.prototype._resetCtx = function(){\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0)\n    this.ctx.restore()\n    return this\n}\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '', ops){\n    if(!image){\n        console.error('mcanvas error : there is not image of watermark.')\n        return\n    }\n    // 参数默认值；\n    let { width = '40%', pos = 'rightbottom', margin = 20 } = ops\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    }\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`\n            position.y = `top:${margin}`\n            break\n        case 'leftBottom':\n            position.x = `left:${margin}`\n            position.y = `bottom:${margin}`\n            break\n        case 'rightTop':\n            position.x = `right:${margin}`\n            position.y = `top:${margin}`\n            break\n        case 'rightBottom':\n            position.x = `right:${margin}`\n            position.y = `bottom:${margin}`\n            break\n        default:\n    }\n    this.add(image, {\n        width,\n        pos:position,\n    })\n    return this\n}\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '', options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    }\n\n    if(!_.isArr(image))image = [{image, options}]\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img, this._handleOps(_.extend(def, v.options), img))\n            }, this.fn.error)\n        })\n    })\n\n    return this\n}\n\nMCanvas.prototype._add = function(img, ops){\n    if(ops.width === 0)console.warn(`mcanvas warn: the width of mc-element is zero`)\n    let { iw, ih } = _.getSize(img)\n    // let ratio = iw / ih;\n    // 画布canvas参数；\n    let cdx, cdy, cdw, cdh\n    // 素材canvas参数；\n    let { x: lsx, y: lsy, width: lsw, height: lsh } = ops.crop\n\n    let cratio = lsw / lsh\n    let ldx, ldy, ldw, ldh\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas')\n    let lctx = lcvs.getContext('2d')\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    // _ratio 为 较大边 / 较小边 的比例；\n    let _ratio = iw > ih ? iw / ih : ih / iw\n    let lctxScale = _ratio * 1.4 > 5 ? 5 : _ratio * 1.4\n    let spaceX, spaceY\n\n    lcvs.width =  Math.round(lsw * lctxScale)\n    lcvs.height = Math.round(lsh * lctxScale)\n\n    // 限制canvas的大小，ios8以下为 2096, 其余平台均限制为 4096;\n    let shrink\n    if(_.isIos8() && (lcvs.width > 2096 || lcvs.height > 2096)){\n        if(cratio > 1){\n            shrink = 2096 / lcvs.width\n        }else{\n            shrink = 2096 / lcvs.height\n        }\n    }else if(lcvs.width > 4096 || lcvs.height > 4096){\n        if(cratio > 1){\n            shrink = 4096 / lcvs.width\n        }else{\n            shrink = 4096 / lcvs.height\n        }\n    }\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = - Math.round(lsw / 2)\n    ldy = - Math.round(lsh / 2)\n    ldw = lsw\n    ldh = Math.round(lsw / cratio)\n\n    // 获取素材最终的宽高;\n    if(shrink){\n        [lcvs.width, lcvs.height, ldx, ldy, ldw, ldh] = [lcvs.width, lcvs.height, ldx, ldy, ldw, ldh].map(v => Math.round(v * shrink))\n    }\n\n    lctx.translate(lcvs.width / 2, lcvs.height / 2)\n    lctx.rotate(ops.pos.rotate)\n    \n    lctx.drawImage(img, lsx, lsy, lsw, lsh, ldx, ldy, ldw, ldh)\n\n    cdw = Math.round(ops.width * lctxScale)\n    cdh = Math.round(cdw / cratio)\n\n    spaceX = (lctxScale - 1) * ops.width / 2\n    spaceY = spaceX / cratio\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = Math.round(ops.pos.x + cdw * ( 1 - ops.pos.scale ) / 2 - spaceX)\n    cdy = Math.round(ops.pos.y + cdh * ( 1 - ops.pos.scale ) / 2 - spaceY)\n\n    cdw *= ops.pos.scale\n    cdh *= ops.pos.scale\n\n    this.ctx.drawImage(lcvs, cdx, cdy, cdw, cdh)\n\n    lcvs = lctx = null\n    this._next()\n}\n\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops, img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height\n    let { iw, ih } = _.getSize(img)\n\n    // 图片宽高比；\n    let ratio = iw / ih\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw, iw, ops.width, 'pos')\n\n    // 裁剪的最大宽高；\n    let maxLsw, maxLsh\n\n    // 裁剪参数；\n    let { x:cropx, y:cropy, width:cropw, height:croph } = ops.crop\n    let crop = {}\n    crop.width = this._get(cw, iw, cropw, 'crop')\n    crop.height = this._get(ch, ih, croph, 'crop')\n    crop.x = this._get(iw, crop.width, cropx, 'crop')\n    crop.y = this._get(ih, crop.height, cropy, 'crop')\n\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw\n    if(crop.y > ih)crop.y = ih\n    maxLsw = iw - crop.x\n    maxLsh = ih - crop.y\n    if(crop.width > maxLsw)crop.width = maxLsw\n    if(crop.height > maxLsh)crop.height = maxLsh\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos\n    let pos = {\n        x:this._get(cw, width, px, 'pos'),\n        y:this._get(ch, width / ratio, py, 'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    }\n    return {width, crop, pos}\n}\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`\n    // 默认的字体大小;\n    let size = this.canvas.width / 20\n\n    this.queue.push(()=>{\n        let defaultStyle = {\n            color:'#000',\n            type : 'fill',   // strokeText or fillText,\n            lineWidth : 1,\n            shadow:{\n                color: null,\n                blur: 0,\n                offsetX: 0,\n                offsetY: 0,\n            },\n        }\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                lineHeight:size * 0.9,\n                ..._.deepCopy(defaultStyle),\n            },\n            normalStyle:{\n                font : `${size}px ${fontFamily}`,\n                lineHeight:size * 1.1,\n                type : 'fill',   // strokeText or fillText,\n                ..._.deepCopy(defaultStyle),\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                lineHeight:size * 1.4,\n                ..._.deepCopy(defaultStyle),\n            },\n            pos:{\n                x:0,\n                y:0,\n                rotate: 0,\n            },\n        }\n\n        option = _.extend(option, ops)\n\n        // 解析字符串模板后，调用字体绘制函数；\n        let parseContext = this._parse(context)\n        let max = 0, maxFont\n        parseContext.map(v => {\n            if (v.size > max) {\n                max = v.size\n                maxFont = v.type\n            }\n        })\n        // 当设置的宽度小于字体宽度时，强行将设置宽度设为与字体一致；\n        let maxFontSize = parseInt(option[`${maxFont}Style`].font)\n        if (maxFontSize && option.width < maxFontSize) option.width = maxFontSize\n\n        this._text(parseContext, option)\n        this._resetCtx()._next()\n    })\n    return this\n}\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/)\n    let result = []\n    for(let i = 0;i < arr.length;i++){\n        let value = arr[i]\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large'\n            let tmp = arr[i].split(splitTag)\n            result.push({\n                type,\n                text:tmp[0],\n                // 用于字体的大小比较；\n                size: type === 'small' ? 0 : 2,\n            })\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n                size: 1,\n            })\n            continue\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n            size: 1,\n        })\n    }\n    return result\n}\n\nMCanvas.prototype._text = function(textArr, option){\n\n    this.data.textId++\n    this.data.text[this.data.textId] = {}\n\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width, 0, option.width, 'pos')\n\n    let style, line = 1, length = 0,\n        lineHeight = getLineHeight(textArr, option),\n        x = this._get(this.canvas.width, option.width, 0, 'pos'),\n        y = (this._get(this.canvas.height, 0, 0, 'pos')) + lineHeight\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.data.text[this.data.textId][line] = {\n        data:[],\n        lineWidth:0,\n    }\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`]\n        this.ctx.font = style.font\n        let width = this.ctx.measureText(v.text).width\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g, '|')\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i = 0, fontLength = context.length; i < fontLength; i++) {\n                let font = context[i]\n                width = this.ctx.measureText(font).width\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font === '|'){\n                    length = 0\n                    x = this._get(this.canvas.width, option.width, 0, 'pos')\n                    y += lineHeight\n                    line += 1\n                    this.data.text[this.data.textId][line] = {\n                        data:[],\n                        lineWidth:0,\n                    }\n                    if(font === '|')continue\n                }\n                this.data.text[this.data.textId][line]['data'].push({\n                    context:font, x, y, style, width,\n                })\n                length += width\n                x += width\n                this.data.text[this.data.textId][line]['lineWidth'] = length\n            }\n        }else{\n            this.data.text[this.data.textId][line]['data'].push({\n                context, x, y, style, width,\n            })\n            length += width\n            x += width\n            this.data.text[this.data.textId][line]['lineWidth'] = length\n        }\n    })\n\n    // 创建文字画布；\n    const tcvs = document.createElement('canvas')\n    const tctx = tcvs.getContext('2d')\n    const tdx = this._get(this.canvas.width, option.width, option.pos.x, 'pos'), \n          tdy = this._get(this.canvas.height, 0, option.pos.y, 'pos')\n    let tdw, tdh\n    tdw = tcvs.width = option.width\n    tdh = tcvs.height = this._getTextRectHeight(line)\n        \n    // 通过字体数据进行文字的绘制；\n    _.forin(this.data.text[this.data.textId], (k, v)=>{\n        // \b增加 align 的功能；\n        let add = 0\n        if(v.lineWidth < option.width){\n            if(option.align === 'center'){\n                add = (option.width - v.lineWidth) / 2\n            }else if (option.align === 'right') {\n                add = option.width - v.lineWidth\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add\n            this._fillText(tctx, text)\n        })\n    })\n\n    // tcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(tcvs);\n    \n    // 绘制文字画布；\n    const originX = tdx + tdw / 2,\n          originY = tdy + tdh / 2\n    this.ctx.translate(originX, originY)\n    this.ctx.rotate(parseFloat(option.pos.rotate) * Math.PI / 180)\n    this.ctx.drawImage(tcvs, -tdw / 2, -tdh / 2, tdw, tdh)\n\n    // 获取行高；\n    function getLineHeight(textArr, option) {\n        let lh = 0, vlh\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineHeight\n            if(vlh > lh)lh = vlh\n        })\n        return lh\n    }\n}\n\nMCanvas.prototype._fillText = function(ctx, text){\n    let {context, x, y, style} = text\n    let {align, lineWidth, shadow} = style\n    let {color, blur, offsetX, offsetY} = shadow\n    ctx.font = style.font\n    ctx.textAlign = align\n    ctx.textBaseline = 'alphabetic'\n    ctx.lineWidth = lineWidth\n    ctx.shadowColor = color\n    ctx.shadowBlur = blur\n    ctx.shadowOffsetX = offsetX\n    ctx.shadowOffsetY = offsetY\n\n    if(style.gradient){\n        let { type, colorStop } = style.gradient\n        let x1, y1, x2, y2\n        if(type === 1){\n            x1 = x; y1 = y\n            x2 = x + text.width; y2 = y \n        }else{\n            x1 = x; y1 = y - style.lineHeight\n            x2 = x; y2 = y\n        }\n        let grad  = ctx.createLinearGradient(x1, y1, x2, y2)\n        let colorNum = colorStop.length || 0\n        _.forin(colorStop, (i, v)=>{\n            grad.addColorStop(1 / colorNum * (+i + 1), v)\n        })\n        ctx[`${style.type}Style`] = grad\n    }else{\n        ctx[`${style.type}Style`] = style.color\n    }\n\n    ctx[`${style.type}Text`](context, x, y)\n    this._resetCtx()\n}\n\nMCanvas.prototype._getTextRectHeight = function (lastLine) {\n    const lastLineData = this.data.text[this.data.textId][lastLine].data[0]\n    return lastLineData.y + lastLineData.style.lineHeight\n}\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par, child, str, type){\n    let result = str\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type === 'pos'){\n            let arr = str.split(':')\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px', ''))\n                    break\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px', ''))) - child\n                    break\n                default:\n            }\n        } else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''))\n        } else if (str.indexOf('%') !== -1) {\n            if(type === 'crop'){\n                result = child * (+str.replace('%', '')) / 100\n            }else{\n                result = par * (+str.replace('%', '')) / 100\n            }\n        } else if (str === 'center'){\n            result = (par - child) / 2\n        } else if (str === 'origin') {\n            result = child\n        } else {\n            result = +str\n        }\n    }\n    return Math.round(result)\n}\n\n// 绘制函数；\nMCanvas.prototype.draw = function(ops){\n    let _ops = {\n        type:'jpeg',\n        quality:.9,\n        success(){},\n        error(){},\n    }, b64\n    if(typeof ops === 'function'){\n        _ops.success = ops\n    }else{\n        _ops = _.extend(_ops, ops)\n        if(_ops.type === 'jpg')_ops.type = 'jpeg'\n    }\n    this.fn.error = _ops.error\n    this.fn.success = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL(`image/${_ops.type}`, _ops.quality)\n            _ops.success(b64)\n        }, 0)\n    }\n    this._next()\n    return this\n}\n\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()()\n    }else{\n        this.fn.success()\n    }\n}\n\nMCanvas.prototype.clear = function(){\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    return this\n}","import _ from './utils'\n\n// 加工获取 pos.x 和 pos.y\nconst getPos = (imgW, cropW, str) => {\n    if (!str && str !== 0) return str\n    let result = str\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1){\n            let arr = str.split(':')\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px', ''))\n                    break\n                case 'right':\n                case 'bottom':\n                    result = imgW - (+(arr[1].replace('px', '')))\n                    break\n                default:\n            }\n        } else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''))\n        } else if (str.indexOf('%') !== -1) {\n            result = imgW * (+str.replace('%', '')) / 100\n        } else if (str === 'center'){\n            result = (imgW - cropW) / 2\n        } else {\n            result = +str\n        }\n    }\n    return Math.round(result)\n}\n\n// 获取长度\nconst getLength = (imgW, str) => {\n    if (!str && str !== 0) return str\n    let result = str\n    if(typeof str === 'string'){\n        if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''))\n        } else if (str.indexOf('%') !== -1) {\n            result = imgW * (+str.replace('%', '')) / 100\n        } else if (str === 'center'){\n            result = imgW / 2\n        } else {\n            result = +str\n        }\n    }\n    return Math.round(result)\n}\n\n// interface ops {\n//     type: 'rect' | 'circle' | 'triangle'\n//  左上角坐标\n//     x: number | string \n//     y: number | string\n//  type = 'rect' 时有效\n//     width?: number | string\n//     height?: number | string\n//  type = 'circle' 时有效   \n//     r?: number | string\n//     exportConfig?: {\n//         type: 'jpg' | 'png' | 'jpeg'\n//         quality: number (0 - 1)\n//     }\n// }\n\nexport default function MCrop(image, ops = {}){\n    if (!image) {\n        console.error('mcrop error : there is not a image.')\n        return\n    }\n    const { success = () => {}, error = () => {} } = ops\n    _.getImage(image, img => {\n        const { iw, ih } = _.getSize(img)\n        const minL = Math.min(iw, ih)\n        const { type = 'rect' } = ops\n        const cvs = document.createElement('canvas')\n        const ctx = cvs.getContext('2d')\n        \n        if (type === 'rect') {\n            let width = getLength(iw, ops.width) || iw\n            let height = getLength(ih, ops.height) || ih\n            if (width > iw) width = iw\n            if (height > ih) height = ih\n            const x = getPos(iw, width, ops.x)\n            const y = getPos(ih, height, ops.y)\n            // 扣除超出部分，避免截图出现空白\n            if (x + width > iw) width =  iw - x\n            if (y + height > ih) height =  ih - y\n            cvs.width = width\n            cvs.height = height     \n            ctx.drawImage(img, -x, -y, iw, ih)\n        } else if (type === 'circle') {\n            let r = getLength(minL, ops.r) || (minL / 2)\n            if (r * 2 > minL) r = minL / 2\n            const x = getPos(iw, r * 2, ops.x)\n            const y = getPos(ih, r * 2, ops.y)\n            cvs.width = r * 2\n            cvs.height = r * 2\n            ctx.beginPath()\n            ctx.arc(r, r, r, 0, Math.PI * 2, false)\n            ctx.fillStyle = '#fff'\n            ctx.fill()\n            ctx.globalCompositeOperation = 'source-in'\n            ctx.drawImage(img, -x, -y, iw, ih)\n        }\n        setTimeout(()=>{\n            const exportConfig = _.extend({\n                type: 'jpeg',\n                quality: .9,\n            }, ops.exportConfig || {}) \n\n            if (type === 'circle') {\n                exportConfig.type = 'png'\n            }\n            const b64 = cvs.toDataURL(`image/${exportConfig.type}`, exportConfig.quality)\n            success(b64)\n        }, 0)\n    }, err => {\n        console.error('mcrop error: load image error.', err)\n        error(err)\n    })\n}","import MCanvas from './mcanvas'\nimport _mcrop from './mcrop'\n\nexport const MCrop = _mcrop\nexport default MCanvas"],"names":["extend","obj1","obj2","type","this","isType","forin","k","v","vType","_this","i","length","loadImage","image","loaded","error","img","Image","indexOf","crossOrigin","onload","setTimeout","onerror","src","isObject","tar","isObjFunc","isBoolean","isArr","getImage","cbk","_typeof","console","log","obj","hasOwnProperty","isIos8","UA","window","navigator","userAgent","toLowerCase","IOS","test","IPAD","match","deepCopy","JSON","parse","stringify","name","Object","prototype","toString","call","split","replace","getSize","iw","ih","tagName","naturalWidth","naturalHeight","width","height","offsetWidth","offsetHeight","MCanvas","options","ops","_","backgroundColor","canvas","ctx","queue","fn","success","data","textId","text","bgConfig","_init","document","createElement","getContext","save","setBgColor","background","bg","push","color","_background","fillStyle","fillRect","_getBgAlign","left","cw","cropScale","rv","Math","abs","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","iRatio","cRatio","top","drawImage","_next","rect","fillColor","strokeColor","strokeWidth","_this2","ch","_get","x","y","lineWidth","strokeStyle","beginPath","strokeRect","closePath","_resetCtx","circle","_this3","r","arc","PI","fill","stroke","setTransform","restore","watermark","pos","margin","position","scale","rotate","add","def","crop","forEach","_this4","_add","_handleOps","warn","cdx","cdy","cdw","cdh","ldx","ldy","ldw","ldh","spaceX","spaceY","shrink","lsx","lsy","lsw","lsh","cratio","lcvs","lctx","_ratio","lctxScale","round","map","translate","maxLsw","maxLsh","ratio","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","context","fontFamily","size","defaultStyle","shadow","blur","offsetX","offsetY","option","align","smallStyle","font","lineHeight","normalStyle","largeStyle","maxFont","parseContext","_this5","_parse","max","maxFontSize","parseInt","_text","arr","result","value","splitTag","tmp","textArr","style","vlh","lh","line","_this6","measureText","fontLength","tdw","tdh","tcvs","tctx","tdx","tdy","_getTextRectHeight","_fillText","originX","originY","textAlign","textBaseline","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","gradient","x1","y1","x2","y2","colorStop","grad","createLinearGradient","colorNum","addColorStop","lastLine","lastLineData","par","child","str","draw","b64","_ops","quality","_this7","toDataURL","shift","clear","clearRect","getPos","imgW","cropW","getLength","MCrop","minL","min","cvs","globalCompositeOperation","exportConfig","err"],"mappings":"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"}