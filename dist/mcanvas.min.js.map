{"version":3,"file":"mcanvas.min.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export default {\n    extend(obj1, obj2) {\n        let type = this.isType(obj2);\n        if(type == 'object'){\n            this.forin(obj2, (k,v) => {\n                let vType = this.isType(v);\n                if (vType !== 'object' && vType !== 'array') {\n                    obj1[k] = v;\n                } else {\n                    if (this.isType(obj1[k]) !== vType || obj1[k] === null) {\n                        obj1[k] = vType == 'object' ? {} : [];\n                    }\n                    this.extend(obj1[k], v);\n                }\n            });\n        }else if(type == 'array'){\n            for (let i = 0; i < obj2.length; i++) {\n                obj1[i] = obj2[i];\n            }\n        }else{\n            obj1 = obj2;\n        }\n        return obj1;\n    },\n    loadImage(image, loaded, error) {\n        let img = new Image();\n        if(image.indexOf('http') == 0){\n            img.crossOrigin = '*';\n        }\n        img.onload = () => {\n            loaded(img);\n            setTimeout(()=>{\n                img = null;\n            },1000);\n        };\n        img.onerror = () => {\n            error('img load error');\n        };\n        img.src = image;\n    },\n    isObject(tar){\n        return this.isObjFunc(tar, 'Object');\n    },\n    isBoolean(tar){\n        return this.isObjFunc(tar, 'Boolean');\n    },\n    isArr(tar){\n        return this.isObjFunc(tar, 'Array');\n    },\n    getImage(image,cbk, error){\n        if(typeof image == 'string'){\n                this.loadImage(image, img => {\n                    cbk(img);\n                },error);\n        }else if(typeof image == 'object'){\n            cbk(image);\n        }else{\n            console.log('add image error');\n            return;\n        }\n    },\n    forin(obj,cbk){\n        for(let k in obj){\n            if(obj.hasOwnProperty(k)){\n                cbk(k,obj[k]);\n            }\n        }\n    },\n    isIos8(){\n        let UA = window.navigator.userAgent.toLowerCase();\n        let IOS = /(iPhone|iPad|iPod|iOS)/gi.test(UA);\n        let IPAD = /(iPad)/gi.test(UA);\n        if(IOS){\n            return IPAD ? UA.match(/cpu os (\\d*)/)[1] < 9 : UA.match(/iphone os (\\d*)/)[1] < 9;\n        }else{\n            return false;\n        }\n    },\n    deepCopy(obj){\n        return JSON.parse(JSON.stringify(obj));\n    },\n    isObjFunc(tar, name) {\n        return Object.prototype.toString.call(tar) === '[object ' + name + ']';\n    },\n    isType(tar){\n        return Object.prototype.toString.call(tar).split(' ')[1].replace(']','').toLowerCase();\n    },\n};\n","import _ from './utils';\n\nexport default function MCanvas(options = {}){\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MCanvas))return new MCanvas(options);\n\n    // 配置canvas初始大小；\n    // width：画布宽度，Number,选填，默认为 500;\n    // height: 画布高度，Number，选填，默认与宽度一致；\n    this.ops = _.extend({\n        width: 500,\n        height: 500,\n        backgroundColor : '',\n    }, options);\n\n    // 全局画布；\n    this.canvas = null;\n    this.ctx = null;\n    // 绘制函数队列；\n    this.queue = [];\n    // 回调函数池；\n    this.fn = {\n        // 最后执行的函数；\n        success(){},\n        // 错误回调；\n        error(){},\n    };\n    this.data = {\n        // 文字id；\n        textId: 0,\n        // 文字绘制数据；\n        text : {},\n        // 背景图数据;\n        bgConfig : null,\n    };\n\n    // 初始化创建画布；\n    this._init();\n}\n\nMCanvas.prototype._init = function(){\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.ops.width;\n    this.canvas.height = this.ops.height;\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.save();\n\n    this.ops.backgroundColor && this.setBgColor(this.ops.backgroundColor);\n};\n\n// --------------------------------------------------------\n// 绘制背景部分；\n// --------------------------------------------------------\n\nMCanvas.prototype.background = function(image, bg = {\n    type : 'origin',\n}){\n    if(!image && !this.data.bgConfig){\n        console.error('mcanvas error : the init background must has a image.');\n        return;\n    }\n\n    // 缓存bg options， 用于重置；\n    if(!image){\n        bg = this.data.bgConfig;\n    }else{\n        bg.image = image;\n        this.data.bgConfig = bg;\n    }\n\n    this.queue.push(() => {\n        if(bg.color)this.setBgColor(bg.color);\n        _.getImage(bg.image, img =>{\n            this._background(img, bg);\n        },this.fn.error);\n    });\n    return this;\n};\n\n// 设置画布颜色;\nMCanvas.prototype.setBgColor = function(color){\n    this.ctx.fillStyle = color;\n    this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);\n};\n\nMCanvas.prototype._getBgAlign = function(left,iw,cw,cropScale){\n    let rv;\n    if(typeof left == 'string'){\n        if(left == '50%' || left == 'center'){\n            rv = Math.abs((iw - cw / cropScale) / 2);\n        }else if(left == '100%'){\n            rv = Math.abs(iw - cw / cropScale);\n        }else if(left == '0%'){\n            rv = 0;\n        }\n    }else if(typeof left == 'number'){\n        rv = left;\n    }else{\n        rv = 0;\n    }\n    return rv;\n};\nMCanvas.prototype._background = function(img, bg){\n    let { iw, ih } = this._getSize(img);\n    // 图片与canvas的长宽比；\n    let iRatio = iw / ih;\n    let cRatio = this.canvas.width / this.canvas.height;\n    // 背景绘制参数；\n    let sx,sy,swidth,sheight,dx,dy,dwidth,dheight;\n    let cropScale;\n    switch (bg.type) {\n        // 裁剪模式，固定canvas大小，原图铺满，超出的部分裁剪；\n        case 'crop':\n            if(iRatio > cRatio){\n                swidth = ih * cRatio;\n                sheight = ih;\n                cropScale = this.canvas.height / ih;\n            }else{\n                swidth = iw;\n                sheight = swidth / cRatio;\n                cropScale = this.canvas.width / iw;\n            }\n\n            sx = this._getBgAlign(bg.left,iw, this.canvas.width,cropScale);\n            sy = this._getBgAlign(bg.top,ih,this.canvas.height,cropScale);\n\n            dy = dx = 0;\n            dheight = this.canvas.height;\n            dwidth = this.canvas.width;\n            break;\n        // 包含模式，固定canvas大小，包含背景图；\n        case 'contain':\n            sy = sx = 0;\n            swidth = iw;\n            sheight = ih;\n            if(iRatio > cRatio){\n                dwidth = this.canvas.width;\n                dheight = dwidth / iRatio;\n                dx = bg.left || 0;\n                dy = (bg.top || bg.top == 0) ? bg.top : (this.canvas.height - dheight)/2;\n            }else{\n                dheight = this.canvas.height;\n                dwidth = dheight * iRatio;\n                dy = bg.top || 0;\n                dx = (bg.left || bg.left == 0) ? bg.left : (this.canvas.width - dwidth)/2;\n            }\n            break;\n        // 原图模式：canvas与原图大小一致，忽略初始化 传入的宽高参数；\n        // 同时，background 传入的 left/top 均被忽略；\n        case 'origin':\n            this.canvas.width = iw;\n            this.canvas.height = ih;\n            sx = sy = 0;\n            swidth = iw;\n            sheight = ih;\n            dx = dy = 0;\n            dwidth = this.canvas.width;\n            dheight = this.canvas.height;\n            break;\n        default:\n            console.error('mcanvas error:background type error!');\n            return;\n    }\n    this.ctx.drawImage(img,sx,sy,swidth,sheight,dx,dy,dwidth,dheight);\n    this._next();\n};\n// --------------------------------------------------------\n// 绘制图层部分；\n// --------------------------------------------------------\n\n// 绘制矩形层；\nMCanvas.prototype.rect = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0} = ops;\n        let cw = this.canvas.width , ch = this.canvas.height;\n        let width = this._get(cw, 0, ops.width || 0, 'pos') - 2 * strokeWidth,\n            height = this._get(ch, 0, ops.height || 0, 'pos') - 2 * strokeWidth;\n        let x = this._get(cw, width, ops.x || 0 ,'pos') + strokeWidth / 2,\n            y = this._get(ch, height, ops.y || 0 ,'pos') + strokeWidth / 2;\n        this.ctx.lineWidth = strokeWidth;\n        this.ctx.fillStyle = fillColor;\n        this.ctx.strokeStyle = strokeColor;\n\n        this.ctx.beginPath();\n        this.ctx.strokeRect(x, y, width, height);\n        this.ctx.fillRect(x, y, width, height);\n        this.ctx.closePath();\n\n        this._resetCtx()._next();\n    });\n    return this;\n};\n\n// 绘制圆形层；\nMCanvas.prototype.circle = function(ops){\n    this.queue.push(() => {\n        let { fillColor = '#fff', strokeColor = fillColor, strokeWidth = 0 } = ops;\n        let cw = this.canvas.width , ch = this.canvas.height;\n        let r = this._get(cw, 0, ops.r || 0, 'pos') - 2 * strokeWidth;\n        let x = this._get(cw, 2 * r, ops.x || 0 ,'pos') + strokeWidth / 2 + r,\n            y = this._get(ch, 2 * r, ops.y || 0 ,'pos') + strokeWidth / 2 + r;\n\n        this.ctx.beginPath();\n        this.ctx.arc(x,y,r,0,Math.PI*2,false);\n        this.ctx.fillStyle = fillColor;\n        this.ctx.fill();\n        this.ctx.strokeStyle = strokeColor;\n        this.ctx.lineWidth = strokeWidth;\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        this._resetCtx()._next();\n    });\n    return this;\n};\n\n// 重置ctx属性;\nMCanvas.prototype._resetCtx = function(){\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.restore();\n    return this;\n};\n\n// 绘制水印；基于 add 函数封装；\nMCanvas.prototype.watermark = function(image = '', ops){\n    if(!image){\n        console.error('mcanvas error : there is not image of watermark.');\n        return;\n    }\n    // 参数默认值；\n    let { width = '40%' , pos = 'rightbottom' , margin = 20 } = ops;\n    let position = {\n        x:0,\n        y:0,\n        scale:1,\n        rotate:0,\n    };\n    switch (pos) {\n        case 'leftTop':\n            position.x = `left:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'leftBottom':\n            position.x = `left:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        case 'rightTop':\n            position.x = `right:${margin}`;\n            position.y = `top:${margin}`;\n            break;\n        case 'rightBottom':\n            position.x = `right:${margin}`;\n            position.y = `bottom:${margin}`;\n            break;\n        default:\n    }\n    this.add(image,{\n        width,\n        pos:position,\n    });\n    return this;\n};\n\n// 通用绘制图层函数；\n// 使用方式：\n// 多张图: add([{image:'',options:{}},{image:'',options:{}}]);\n// 单张图: add(image,options);\nMCanvas.prototype.add = function(image = '',options){\n    // 默认参数；\n    let def = {\n        width:'100%',\n        crop:{\n            x:0,\n            y:0,\n            width:'100%',\n            height:'100%',\n        },\n        pos:{\n            x:0,\n            y:0,\n            scale:1,\n            rotate:0,\n        },\n    };\n\n    if(!_.isArr(image))image = [{image,options}];\n\n    image.forEach( v =>{\n        // 将封装好的 add函数 推入队列中待执行；\n        // 参数经过 _handleOps 加工；\n        this.queue.push(() => {\n            _.getImage(v.image, img => {\n                this._add(img,this._handleOps(_.extend(def,v.options),img));\n            },this.fn.error);\n        });\n    });\n\n    return this;\n};\n\nMCanvas.prototype._add = function(img,ops){\n    if(ops.width == 0)console.warn(`mcanvas warn: the width of mc-element is zero`);\n    let { iw, ih } = this._getSize(img);\n    // let ratio = iw / ih;\n    // 画布canvas参数；\n    let cdx,cdy,cdw,cdh;\n    // 素材canvas参数；\n    let { x:lsx, y:lsy, width:lsw, height:lsh } = ops.crop;\n\n    let cratio = lsw / lsh;\n    let ldx,ldy,ldw,ldh;\n    // 素材canvas的绘制;\n    let lcvs = document.createElement('canvas');\n    let lctx = lcvs.getContext('2d');\n    // 图片宽高比 * 1.4 是一个最安全的宽度，旋转任意角度都不会被裁剪；\n    // 没有旋转却长宽比很高大的图，会导致放大倍数太大，因此甚至了最高倍数为5；\n    // _ratio 为 较大边 / 较小边 的比例；\n    let _ratio = iw > ih ? iw / ih : ih / iw;\n    let lctxScale = _ratio * 1.4 > 5 ? 5 : _ratio * 1.4;\n    let spaceX,spaceY;\n\n    lcvs.width =  lsw * lctxScale;\n    lcvs.height = lsh * lctxScale;\n\n    // 限制canvas的大小，ios8以下为 2096, 其余平台均限制为 4096;\n    let shrink;\n    if(_.isIos8() && (lcvs.width > 2096 || lcvs.height > 2096)){\n        if(cratio > 1){\n            shrink = 2096 / lcvs.width;\n        }else{\n            shrink = 2096 / lcvs.height;\n        }\n    }else if(lcvs.width > 4096 || lcvs.height > 4096){\n        if(cratio > 1){\n            shrink = 4096 / lcvs.width;\n        }else{\n            shrink = 4096 / lcvs.height;\n        }\n    }\n\n    // 从素材canvas的中心点开始绘制；\n    ldx = - Math.round(lsw / 2);\n    ldy = - Math.round(lsh / 2);\n    ldw = lsw;\n    ldh = Math.round(lsw / cratio);\n\n    // 获取素材最终的宽高;\n    if(shrink){\n        [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh] = [lcvs.width,lcvs.height,ldx,ldy,ldw,ldh].map(v => Math.round(v*shrink));\n    }\n\n    lctx.translate(lcvs.width/2,lcvs.height/2);\n    lctx.rotate(ops.pos.rotate);\n    \n    lctx.drawImage(img,lsx,lsy,lsw,lsh,ldx,ldy,ldw,ldh);\n\n    // lcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(lcvs);\n\n    cdw = ops.width * lctxScale;\n    cdh = cdw / cratio;\n\n    spaceX = (lctxScale - 1) * ops.width / 2;\n    spaceY = spaceX / cratio;\n\n    // 获取素材的位置；\n    //    配置的位置 - 缩放的影响 - 绘制成正方形的影响；\n    cdx = ops.pos.x + cdw * ( 1 - ops.pos.scale )/2 - spaceX;\n    cdy = ops.pos.y + cdh * ( 1 - ops.pos.scale )/2 - spaceY;\n\n    cdw *= ops.pos.scale;\n    cdh *= ops.pos.scale;\n\n    this.ctx.drawImage(lcvs,cdx,cdy,cdw,cdh);\n\n    lcvs = lctx = null;\n    this._next();\n};\n\n// 获取宽高，兼容img，canvas\nMCanvas.prototype._getSize = function(img){\n    let iw, ih;\n    if(img.tagName === 'IMG'){\n        iw = img.naturalWidth;\n        ih = img.naturalHeight;\n    }else if(img.tagName === 'CANVAS'){\n        iw = img.width;\n        ih = img.height;\n    }else{\n        iw = img.offsetWidth;\n        ih = img.offsetHeight;\n    }\n    return { iw, ih };\n};\n// 参数加工函数；\nMCanvas.prototype._handleOps = function(ops,img){\n    let cw = this.canvas.width,\n        ch = this.canvas.height;\n    let { iw, ih } = this._getSize(img);\n\n    // 图片宽高比；\n    let ratio = iw / ih;\n\n    // 根据参数计算后的绘制宽度；\n    let width =  this._get(cw,iw,ops.width,'pos');\n\n    // 裁剪的最大宽高；\n    let maxLsw,maxLsh;\n\n    // 裁剪参数；\n    let { x:cropx,y:cropy,width:cropw,height:croph } = ops.crop;\n    let crop = {};\n    crop.width = this._get(cw,iw,cropw,'crop');\n    crop.height = this._get(ch,ih,croph,'crop');\n    crop.x = this._get(iw,crop.width,cropx,'crop');\n    crop.y = this._get(ih,crop.height,cropy,'crop');\n\n    // 最大值判定；\n    if(crop.x > iw)crop.x = iw;\n    if(crop.y > ih)crop.y = ih;\n    maxLsw = iw - crop.x;\n    maxLsh = ih - crop.y;\n    if(crop.width > maxLsw)crop.width = maxLsw;\n    if(crop.height > maxLsh)crop.height = maxLsh;\n\n    // 位置参数；\n    let { x: px, y: py, rotate: pr, scale: ps } = ops.pos;\n    let pos = {\n        x:this._get(cw,width,px,'pos'),\n        y:this._get(ch,width/ratio,py,'pos'),\n        scale : ps,\n        rotate : parseFloat(pr) * Math.PI / 180,\n    };\n    return {width,crop,pos};\n};\n\n// --------------------------------------------------------\n// 绘制文字部分；\n// --------------------------------------------------------\nMCanvas.prototype.text = function(context = '', ops){\n    // 默认字体；\n    let fontFamily = `helvetica neue,hiragino sans gb,Microsoft YaHei,arial,tahoma,sans-serif`;\n    // 默认的字体大小;\n    let size = this.canvas.width / 20;\n\n    this.queue.push(()=>{\n        let defaultStyle = {\n            color:'#000',\n            type : 'fill',   // strokeText or fillText,\n            lineWidth : 1,\n            shadow:{\n                color: null,\n                blur: 0,\n                offsetX: 0,\n                offsetY: 0,\n            },\n        };\n        let option = {\n            width : 300,\n            align : 'left',\n            smallStyle:{\n                font : `${size * 0.8}px ${fontFamily}`,\n                lineHeight:size * 0.9,\n                ..._.deepCopy(defaultStyle),\n            },\n            normalStyle:{\n                font : `${size}px ${fontFamily}`,\n                lineHeight:size*1.1,\n                type : 'fill',   // strokeText or fillText,\n                ..._.deepCopy(defaultStyle),\n            },\n            largeStyle:{\n                font : `${size * 1.3}px ${fontFamily}`,\n                lineHeight:size * 1.4,\n                ..._.deepCopy(defaultStyle),\n            },\n            pos:{\n                x:0,\n                y:0,\n                rotate: 0,\n            },\n        };\n\n        option = _.extend(option,ops);\n\n        // 解析字符串模板后，调用字体绘制函数；\n        let parseContext = this._parse(context);\n        let max = 0, maxFont;\n        parseContext.map(v => {\n            if (v.size > max) {\n                max = v.size;\n                maxFont = v.type;\n            }\n        });\n        // 当设置的宽度小于字体宽度时，强行将设置宽度设为与字体一致；\n        let maxFontSize = parseInt(option[`${maxFont}Style`].font);\n        if (maxFontSize && option.width < maxFontSize) option.width = maxFontSize;\n\n        this._text(parseContext, option);\n        this._resetCtx()._next();\n    });\n    return this;\n};\n// 字符串模板解析函数\n// 解析 <s></s> <b></b>\nMCanvas.prototype._parse = function(context){\n    let arr = context.split(/<s>|<b>/);\n    let result = [];\n    for(let i= 0;i<arr.length;i++){\n        let value = arr[i];\n        if(/<\\/s>|<\\/b>/.test(value)){\n            let splitTag = /<\\/s>/.test(value) ? '</s>' : '</b>',\n                type     = /<\\/s>/.test(value) ? 'small' : 'large';\n            let tmp = arr[i].split(splitTag);\n            result.push({\n                type,\n                text:tmp[0],\n                // 用于字体的大小比较；\n                size: type == 'small' ? 0 : 2,\n            });\n            tmp[1] && result.push({\n                type:'normal',\n                text:tmp[1],\n                size: 1,\n            });\n            continue;\n        }\n        arr[i] && result.push({\n            text:arr[i],\n            type:'normal',\n            size: 1,\n        });\n    }\n    return result;\n};\n\nMCanvas.prototype._text = function(textArr,option){\n\n    this.data.textId++;\n    this.data.text[this.data.textId] = {};\n\n    // 处理宽度参数；\n    option.width = this._get(this.canvas.width,0,option.width,'pos');\n\n    let style, line = 1, length = 0,\n        lineHeight = getLineHeight(textArr,option),\n        x = this._get(this.canvas.width,option.width,0 ,'pos'),\n        y = (this._get(this.canvas.height,0 ,0 ,'pos')) + lineHeight;\n\n    // data:字体数据；\n    // lineWidth:行宽；\n    this.data.text[this.data.textId][line] = {\n        data:[],\n        lineWidth:0,\n    };\n\n    // 生成字体数据；\n    textArr.forEach(v =>{\n        style = option[`${v.type}Style`];\n        this.ctx.font = style.font;\n        let width = this.ctx.measureText(v.text).width;\n\n        // 处理 <br> 换行，先替换成 '|',便于单字绘图时进行判断；\n        let context = v.text.replace(/<br>/g,'|');\n\n        // 先进行多字超出判断，超出宽度后再进行单字超出判断；\n        if((length + width) > option.width || context.indexOf('|') !== -1){\n            for (let i = 0,fontLength = context.length; i < fontLength; i++) {\n                let font = context[i];\n                width = this.ctx.measureText(font).width;\n\n                // 当字体的计算宽度 > 设置的宽度 || 内容中包含换行时,进入换行逻辑；\n                if((length + width) > option.width || font == '|'){\n                    length = 0;\n                    x = this._get(this.canvas.width,option.width, 0, 'pos');\n                    y += lineHeight;\n                    line += 1;\n                    this.data.text[this.data.textId][line] = {\n                        data:[],\n                        lineWidth:0,\n                    };\n                    if(font == '|')continue;\n                }\n                this.data.text[this.data.textId][line]['data'].push({\n                    context:font,x,y,style,width,\n                });\n                length += width;\n                x += width;\n                this.data.text[this.data.textId][line]['lineWidth'] = length;\n            }\n        }else{\n            this.data.text[this.data.textId][line]['data'].push({\n                context,x,y,style,width,\n            });\n            length += width;\n            x += width;\n            this.data.text[this.data.textId][line]['lineWidth'] = length;\n        }\n    });\n\n    // 创建文字画布；\n    const tcvs = document.createElement('canvas');\n    const tctx = tcvs.getContext('2d');\n    const tdx = this._get(this.canvas.width,option.width,option.pos.x ,'pos'), \n          tdy = this._get(this.canvas.height,0 ,option.pos.y ,'pos');\n    let tdw, tdh;\n    tdw = tcvs.width = option.width;\n    tdh = tcvs.height = this._getTextRectHeight(line);\n        \n    // 通过字体数据进行文字的绘制；\n    _.forin(this.data.text[this.data.textId],(k,v)=>{\n        // \b增加 align 的功能；\n        let add = 0;\n        if(v.lineWidth < option.width){\n            if(option.align == 'center'){\n                add = (option.width - v.lineWidth)/2;\n            }else if (option.align == 'right') {\n                add = option.width - v.lineWidth;\n            }\n        }\n        v.data.forEach(text=>{\n            text.x += add;\n            this._fillText(tctx, text);\n        });\n    });\n\n    // tcvs.style.width = '300px';\n    // document.querySelector('body').appendChild(tcvs);\n    \n    // 绘制文字画布；\n    const originX = tdx + tdw/2,\n          originY = tdy + tdh/2;\n    this.ctx.translate(originX, originY);\n    this.ctx.rotate(parseFloat(option.pos.rotate) * Math.PI / 180);\n    this.ctx.drawImage(tcvs,-tdw/2, -tdh/2, tdw, tdh);\n\n    // 获取行高；\n    function getLineHeight(textArr,option) {\n        let lh = 0,vlh;\n        textArr.forEach( v =>{\n            vlh = option[`${v.type}Style`].lineHeight;\n            if(vlh > lh)lh = vlh;\n        });\n        return lh;\n    }\n};\n\nMCanvas.prototype._fillText = function(ctx, text){\n    let {context, x, y, style} = text;\n    let {align, lineWidth, shadow} = style;\n    let {color, blur, offsetX, offsetY} = shadow;\n    ctx.font = style.font;\n    ctx.textAlign = align;\n    ctx.textBaseline = 'alphabetic';\n    ctx.lineWidth = lineWidth;\n    ctx.shadowColor = color;\n    ctx.shadowBlur = blur;\n    ctx.shadowOffsetX = offsetX;\n    ctx.shadowOffsetY = offsetY;\n\n    if(style.gradient){\n        let { type, colorStop } = style.gradient;\n        let x1, y1, x2, y2;\n        if(type == 1){\n            x1 = x; y1 = y;\n            x2 = x + text.width; y2 = y ;\n        }else{\n            x1 = x; y1 = y - style.lineHeight;\n            x2 = x; y2 = y;\n        }\n        let grad  = ctx.createLinearGradient(x1,y1,x2,y2);\n        let colorNum = colorStop.length || 0;\n        _.forin(colorStop, (i, v)=>{\n            grad.addColorStop(1/colorNum*(+i+1),v);\n        });\n        ctx[`${style.type}Style`] = grad;\n    }else{\n        ctx[`${style.type}Style`] = style.color;\n    }\n\n    ctx[`${style.type}Text`](context,x,y);\n    this._resetCtx();\n};\n\nMCanvas.prototype._getTextRectHeight = function (lastLine) {\n    const lastLineData = this.data.text[this.data.textId][lastLine].data[0];\n    return lastLineData.y + lastLineData.style.lineHeight;\n};\n\n// --------------------------------------------------------\n// 业务功能函数部分\n// --------------------------------------------------------\n\n// 参数加工函数；\n// 兼容 5 种 value 值：\n// x:250, x:'250px', x:'100%', x:'left:250',x:'center',\n// width:100,width:'100px',width:'100%'\nMCanvas.prototype._get = function(par,child,str,type){\n    let result = str;\n    if(typeof str === 'string'){\n        if(str.indexOf(':') !== -1 && type == 'pos'){\n            let arr = str.split(':');\n            switch (arr[0]) {\n                case 'left':\n                case 'top':\n                    result = +(arr[1].replace('px',''));\n                    break;\n                case 'right':\n                case 'bottom':\n                    result = par - (+(arr[1].replace('px',''))) - child;\n                    break;\n                default:\n            }\n        }else if (str.indexOf('px') !== -1) {\n            result = (+str.replace('px', ''));\n        } else if (str.indexOf('%') !== -1) {\n            if(type == 'crop'){\n                result = child * (+str.replace('%', '')) / 100;\n            }else{\n                result = par * (+str.replace('%', '')) / 100;\n            }\n        } else if (str == 'center'){\n            result = (par-child)/2;\n        } else if (str == 'origin') {\n            result = child;\n        } else {\n            result = +str;\n        }\n    }\n    return Math.round(result);\n};\n\n// 绘制函数；\nMCanvas.prototype.draw = function(ops){\n    let _ops = {\n        type:'jpg',\n        quality:.9,\n        success(){},\n        error(){},\n    }, b64;\n    if(typeof ops == 'function'){\n        _ops.success = ops;\n    }else{\n        _ops = _.extend(_ops,ops);\n        if(_ops.type == 'jpg')_ops.type = 'jpeg';\n    }\n    this.fn.error = _ops.error;\n    this.fn.success = () => {\n        setTimeout(()=>{\n            b64 = this.canvas.toDataURL(`image/${_ops.type}`, _ops.quality);\n            _ops.success(b64);\n        },0);\n    };\n    this._next();\n    return this;\n};\n\nMCanvas.prototype._next = function(){\n    if(this.queue.length > 0){\n        this.queue.shift()();\n    }else{\n        this.fn.success();\n    }\n};\n\nMCanvas.prototype.clear = function(){\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    return this;\n};\n"],"names":["extend","obj1","obj2","type","this","isType","forin","k","v","vType","_this","i","length","loadImage","image","loaded","error","img","Image","indexOf","crossOrigin","onload","setTimeout","onerror","src","isObject","tar","isObjFunc","isBoolean","isArr","getImage","cbk","_typeof","console","log","obj","hasOwnProperty","isIos8","UA","window","navigator","userAgent","toLowerCase","IOS","test","IPAD","match","deepCopy","JSON","parse","stringify","name","Object","prototype","toString","call","split","replace","MCanvas","options","ops","_","width","height","backgroundColor","canvas","ctx","queue","fn","success","data","textId","text","bgConfig","_init","document","createElement","getContext","save","setBgColor","background","bg","push","color","_background","fillStyle","fillRect","_getBgAlign","left","iw","cw","cropScale","rv","Math","abs","sx","sy","swidth","sheight","dx","dy","dwidth","dheight","_getSize","ih","iRatio","cRatio","top","drawImage","_next","rect","fillColor","strokeColor","strokeWidth","_this2","ch","_get","x","y","lineWidth","strokeStyle","beginPath","strokeRect","closePath","_resetCtx","circle","_this3","r","arc","PI","fill","stroke","setTransform","restore","watermark","pos","margin","position","scale","rotate","add","def","crop","forEach","_this4","_add","_handleOps","warn","cdx","cdy","cdw","cdh","ldx","ldy","ldw","ldh","spaceX","spaceY","shrink","lsx","lsy","lsw","lsh","cratio","lcvs","lctx","_ratio","lctxScale","round","map","translate","tagName","naturalWidth","naturalHeight","offsetWidth","offsetHeight","maxLsw","maxLsh","ratio","cropx","cropy","cropw","croph","px","py","pr","ps","parseFloat","context","fontFamily","size","defaultStyle","shadow","blur","offsetX","offsetY","option","align","smallStyle","font","lineHeight","normalStyle","largeStyle","maxFont","parseContext","_this5","_parse","max","maxFontSize","parseInt","_text","arr","result","value","splitTag","tmp","textArr","style","vlh","lh","line","_this6","measureText","fontLength","tdw","tdh","tcvs","tctx","tdx","tdy","_getTextRectHeight","_fillText","originX","originY","textAlign","textBaseline","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","gradient","x1","y1","x2","y2","colorStop","grad","createLinearGradient","colorNum","addColorStop","lastLine","lastLineData","par","child","str","draw","b64","_ops","quality","_this7","toDataURL","shift","clear","clearRect"],"mappings":"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"}